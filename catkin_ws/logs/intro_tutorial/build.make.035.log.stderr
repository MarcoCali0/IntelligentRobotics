In file included from [01m[K/opt/ros/noetic/include/ros/ros.h:40[m[K,
                 from [01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:1[m[K:
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:[m[K In function â€˜[01m[Kvoid feedbackCb(const FibonacciActionFeedbackConstPtr&)[m[Kâ€™:
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:8:54:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kconst struct intro_tutorial::FibonacciActionFeedback_<std::allocator<void> >[m[Kâ€™ has no member named â€˜[01m[Ksequence[m[Kâ€™
    8 |     ROS_INFO("Got Feedback of length %lu", feedback->[01;31m[Ksequence[m[K.size());
      |                                                      [01;31m[K^~~~~~~~[m[K
[01m[K/opt/ros/noetic/include/ros/console.h:351:165:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION_WITH_FILTER[m[Kâ€™
  351 |     ::ros::console::print(filter, __rosconsole_define_location__loc.logger_, __rosconsole_define_location__loc.level_, __FILE__, __LINE__, __ROSCONSOLE_FUNCTION__, [01;36m[K__VA_ARGS__[m[K)
      |                                                                                                                                                                     [01;36m[K^~~~~~~~~~~[m[K
[01m[K/opt/ros/noetic/include/ros/console.h:390:7:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROSCONSOLE_PRINT_AT_LOCATION[m[Kâ€™
  390 |       [01;36m[KROSCONSOLE_PRINT_AT_LOCATION[m[K(__VA_ARGS__); \
      |       [01;36m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/opt/ros/noetic/include/ros/console.h:575:35:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG_COND[m[Kâ€™
  575 | #define ROS_LOG(level, name, ...) [01;36m[KROS_LOG_COND[m[K(true, level, name, __VA_ARGS__)
      |                                   [01;36m[K^~~~~~~~~~~~[m[K
[01m[K/opt/ros/noetic/include/rosconsole/macros_generated.h:110:23:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_LOG[m[Kâ€™
  110 | #define ROS_INFO(...) [01;36m[KROS_LOG[m[K(::ros::console::levels::Info, ROSCONSOLE_DEFAULT_NAME, __VA_ARGS__)
      |                       [01;36m[K^~~~~~~[m[K
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:8:5:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KROS_INFO[m[Kâ€™
    8 |     [01;36m[KROS_INFO[m[K("Got Feedback of length %lu", feedback->sequence.size());
      |     [01;36m[K^~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/function/detail/maybe_include.hpp:29[m[K,
                 from [01m[K/usr/include/boost/function/detail/function_iterate.hpp:14[m[K,
                 from [01m[K/usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:58[m[K,
                 from [01m[K/usr/include/boost/function.hpp:71[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:1[m[K:
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker2<FunctionObj, R, T0, T1>::invoke(boost::detail::function::function_buffer&, T0, T1) [with FunctionObj = std::nullptr_t; R = void; T0 = const actionlib::SimpleClientGoalState&; T1 = const boost::shared_ptr<const intro_tutorial::FibonacciResult_<std::allocator<void> > >&][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:931:38:[m[K   required from â€˜[01m[Kvoid boost::function2<R, T1, T2>::assign_to(Functor) [with Functor = std::nullptr_t; R = void; T0 = const actionlib::SimpleClientGoalState&; T1 = const boost::shared_ptr<const intro_tutorial::FibonacciResult_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:720:7:[m[K   required from â€˜[01m[Kboost::function2<R, T1, T2>::function2(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = std::nullptr_t; R = void; T0 = const actionlib::SimpleClientGoalState&; T1 = const boost::shared_ptr<const intro_tutorial::FibonacciResult_<std::allocator<void> > >&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1068:16:[m[K   required from â€˜[01m[Kboost::function<R(T0, T1)>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = std::nullptr_t; R = void; T0 = const actionlib::SimpleClientGoalState&; T1 = const boost::shared_ptr<const intro_tutorial::FibonacciResult_<std::allocator<void> > >&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:22:52:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:158:11:[m[K [01;31m[Kerror: [m[Kexpression cannot be used as a function
  158 |           [01;31m[KBOOST_FUNCTION_RETURN[m[K((*f)(BOOST_FUNCTION_ARGS));
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/function/detail/maybe_include.hpp:15[m[K,
                 from [01m[K/usr/include/boost/function/detail/function_iterate.hpp:14[m[K,
                 from [01m[K/usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:48[m[K,
                 from [01m[K/usr/include/boost/function.hpp:71[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:1[m[K:
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_obj_invoker0<FunctionObj, R>::invoke(boost::detail::function::function_buffer&) [with FunctionObj = std::nullptr_t; R = void][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:931:38:[m[K   required from â€˜[01m[Kvoid boost::function0<R>::assign_to(Functor) [with Functor = std::nullptr_t; R = void][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:720:7:[m[K   required from â€˜[01m[Kboost::function0<R>::function0(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = std::nullptr_t; R = void; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1068:16:[m[K   required from â€˜[01m[Kboost::function<R()>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = std::nullptr_t; R = void; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:22:52:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:158:11:[m[K [01;31m[Kerror: [m[Kexpression cannot be used as a function
  158 |           [01;31m[KBOOST_FUNCTION_RETURN[m[K((*f)(BOOST_FUNCTION_ARGS));
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/boost/function/detail/maybe_include.hpp:22[m[K,
                 from [01m[K/usr/include/boost/function/detail/function_iterate.hpp:14[m[K,
                 from [01m[K/usr/include/boost/preprocessor/iteration/detail/iter/forward1.hpp:53[m[K,
                 from [01m[K/usr/include/boost/function.hpp:71[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/forwards.h:40[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/common.h:37[m[K,
                 from [01m[K/opt/ros/noetic/include/ros/ros.h:43[m[K,
                 from [01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:1[m[K:
/usr/include/boost/function/function_template.hpp: In instantiation of â€˜[01m[Kstatic void boost::detail::function::void_function_invoker1<FunctionPtr, R, T0>::invoke(boost::detail::function::function_buffer&, T0) [with FunctionPtr = void (*)(const boost::shared_ptr<const intro_tutorial::FibonacciActionFeedback_<std::allocator<void> > >&); R = void; T0 = const boost::shared_ptr<const intro_tutorial::FibonacciFeedback_<std::allocator<void> > >&][m[Kâ€™:
[01m[K/usr/include/boost/function/function_template.hpp:931:38:[m[K   required from â€˜[01m[Kvoid boost::function1<R, T1>::assign_to(Functor) [with Functor = void (*)(const boost::shared_ptr<const intro_tutorial::FibonacciActionFeedback_<std::allocator<void> > >&); R = void; T0 = const boost::shared_ptr<const intro_tutorial::FibonacciFeedback_<std::allocator<void> > >&][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:720:7:[m[K   required from â€˜[01m[Kboost::function1<R, T1>::function1(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = void (*)(const boost::shared_ptr<const intro_tutorial::FibonacciActionFeedback_<std::allocator<void> > >&); R = void; T0 = const boost::shared_ptr<const intro_tutorial::FibonacciFeedback_<std::allocator<void> > >&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/usr/include/boost/function/function_template.hpp:1068:16:[m[K   required from â€˜[01m[Kboost::function<R(T0)>::function(Functor, typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type) [with Functor = void (*)(const boost::shared_ptr<const intro_tutorial::FibonacciActionFeedback_<std::allocator<void> > >&); R = void; T0 = const boost::shared_ptr<const intro_tutorial::FibonacciFeedback_<std::allocator<void> > >&; typename boost::enable_if_<(! boost::is_integral<Functor>::value), int>::type = int][m[Kâ€™
[01m[K/home/marco/IntelligentRobotics/catkin_ws/src/intro_tutorial/src/fibonacci_client.cpp:22:52:[m[K   required from here
[01m[K/usr/include/boost/function/function_template.hpp:117:11:[m[K [01;31m[Kerror: [m[Kinvalid initialization of reference of type â€˜[01m[Kconst boost::shared_ptr<const intro_tutorial::FibonacciActionFeedback_<std::allocator<void> > >&[m[Kâ€™ from expression of type â€˜[01m[Kconst boost::shared_ptr<const intro_tutorial::FibonacciFeedback_<std::allocator<void> > >[m[Kâ€™
  117 |           [01;31m[KBOOST_FUNCTION_RETURN[m[K(f(BOOST_FUNCTION_ARGS));
      |           [01;31m[K^~~~~~~~~~~~~~~~~~~~~[m[K
make[2]: *** [CMakeFiles/fibonacci_client.dir/build.make:63: CMakeFiles/fibonacci_client.dir/src/fibonacci_client.cpp.o] Error 1
make[1]: *** [CMakeFiles/Makefile2:1024: CMakeFiles/fibonacci_client.dir/all] Error 2
make: *** [Makefile:141: all] Error 2
